VSCode Theme: Dark Modern


; This is a valid script comment and completely dark green.
# This is not a valid script comment since comments must start with a semicolon.
some line start ; Comments are only highlighted at line start.


;PRIMARY SECTIONS:

; Keywords to include code from other files are purple:
importlib ""
include_insert ""
include_append ""
sub ""
importlib
importlib "" "" "" some words


; Variable names (enclosed in two dollars!) and script configs are light blue.
$myVar$
$myvar
setloglevel=8
; Strings are orange.
'str'
; Booleans are not highlighted yet since they are only half valid data types in opsi-script.
true
; Numbers are highlighted although they are only half valid data types in opsi-script.
5.1
; Script functions and statements are yellow.
getos
takestring()
comment ""
exitwindows /immediatereboot
exitwindows     /immediatereboot
; Other (user defined) functions are turquoise.
mytestdeffunc()
mytestdeffunc("'" + $myVar$)

; Constants outside of strings are not highlighted since this is invalid syntax! (Except for for-loops)
%scriptpath%
; Constants inside of strings are light blue like variables.
"%scriptpath%"
; In for loops the iterating constant must not be quoted!
for %s% in createstringlist("") do
for "%s%" in createstringlist("") do

; Variables inside of strings are not highlighted.
"$myVar$"
; Random non-keyword words are not highlighted, i.e. white.
random


; Keywords are dark blue:
defvar defstringlist set
if else elseif endif
and or not
switch case defaultcase endcase endswitch
; "for" keyword: See above in the part about script constants
for
for %s%
in to do
deffunc endfunc
val ref
void string stringlist
; in use:
deffunc test($var$: string): void
  Filesx
  [filesx]
  copy ""
endfunc


; Section calls are turquoise like defined functions:
Subx
Winbatchx
ShellScriptx
; Execwith needs string afterwards
ExecWithx ""
Filesx
Filesx /alluserprofiles /32Bit
Registryx
Patchesx
Patchtextfilex
LinkFolderx
Opsiservicecallx
Patchhostsx
xml2x
ExecPythonx
Ldapsearchx
; TODO: Should we demand an underscore after the section type?


; Every Stringlist or String is possible after registry command (search for 'tsecExpected:' in opsi-script osparser.pas).
Registry loadUnicodeTextFile("") /regedit
Registry loadTextFile("") /regedit
Registry "" /regedit
Registry loadUnicodeTextFile("") /regedit /Sysnative
; User defined functions and functions after registry command with incomplete string do not completely break the following highlighting like script functions
; but the brackets show the error an that must be enough for now.
;mytestdeffunc("')
;Registry loadUnicodeTextFile(') /regedit
; Compare to:
;loadUnicodeTextFile(')


; TODO: Section calls with modifiers.


; Deprecated selection:
%WinstVersion%
"%WinstVersion%"
LogLevel
errorsOccuredSinceMark
; TODO: No idea why SubstringBefore is not recognized as deprecated.
substringbefore
SubstringBefore
SubstringBefore("", "")
stringsplit
stringsplit("")
off
ScriptErrorMessages = off
; Modifier is red if and only if used as modifier, else unhighlighted.
/AllNTUserProfiles
filesx /AllNTUserProfiles
; ExitWindows with modifier is handled as one ingle command for each modifier.
ExitWindows /RebootWanted
ExitWindows     /RebootWanted
; Deprecated section command outside of the section is white.
ReconstructFrom
; Primary sections cannot be called and have no name extension.
Aktionen
Aktionenx
[Aktionen]
[Aktionenx]
; Secondary sections need a name extension.
Dosbatch
Dosbatchx
Dosbatchx /32Bit
[Dosbatch]
[Dosbatchx]


; Section heads are also turquoise:
; Actions and Profileactions do not allow following characters.
[Actions]
[Actionsx]
[Profileactions]
[Profileactionsx]
[Subx]
[Sub]
[Winbatchx]
[ShellScriptx]
[ExecWithx]
[Filesx]
[Files]
[Registryx]
[Registry]


;SECONDARY SECTIONS:

[Winbatchx]
; No special highlighting (except for strings and for constants and variables which will be replaced in execution).
echo "test" %scriptpath% $myvar$
$Today = (Get-Date).DateTime

[ShellScriptx]
; No special highlighting (except for strings and for constants and variables which will be replaced in execution).
echo "test" %scriptpath% $myvar$
$Today = (Get-Date).DateTime

[Execwithx]
; No special highlighting (except for strings and for constants and variables which will be replaced in execution).
echo "test" %scriptpath% $myvar$
$Today = (Get-Date).DateTime

[Execwithxpowershellyz]
; Special powershell highlighting if 'powershell' occurs after 'execwith' in the section name.
echo "test" %scriptpath% $myvar$
$Today = (Get-Date).DateTime

[Execpythonx]
; Special python highlighting.
import sys
testvar = ""
if testvar:
    print("")

[filesx]
; Selection of commands: All commands should be purple!
SourcePath
SourcePath = ""
copy
copy ""
copy -seVvcduxwnrh "" "" "" ""
delete
delete ""
delete -fsd3c ""
del -fsd3c ""
chmod 777
chmod 777 ""
move
move "" "" "" ""

[registryx]
; Selection of commands: All commands should be purple!
OpenKey
OpenKey [x]
Set
Set "" =
Supp
Supp "" ;
SaveValueToFile
SaveValueToFile "" "" "" ""
DeleteVar
DeleteVar "" "" ""
FlushKey
; Deprecated command is red.
ReconstructFrom

[patchesx]
; Selection of commands: All commands should be purple!
add
add [] test=test
del
del [] test
delsec
delsec []
replace
replace test=test test2=test2

[patchtextfilex]
; Selection of commands: All commands should be purple!
Set_Mozilla_Pref
Set_Mozilla_Pref("")
FindLine
FindLine ""
AddLine
GoToTop
GoToTop ""

[Linkfolderx]
; Selection of commands: All commands should be purple!
set_basefolder
set_basefolder common_programs
set_subfolder
set_subfolder ""
delete_element
delete_subfolder
set_link
  name: ""
  target: ""
  parameters:
  icon_file:
end_link

[patchhostsx]
; Selection of commands: All commands should be purple!
; The following need one or more arguments.
setaddr
delhost
setComment

[xml2x]
; Selection of commands: All commands should be purple!
strictMode
strictMode = true
openNode
openNode "" "" ""
SetAttribute
gotoParentNode ""
rootNodeOnCreate
rootNodeOnCreate = ""

[Ldapsearchx]
targethost:
dn:
