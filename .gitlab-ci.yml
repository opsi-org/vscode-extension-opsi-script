image: node:14-slim

stages:
  - build
  - publish

.install_tools: &install_tools |
  export DEBIAN_FRONTEND=noninteractive
  apt update
  apt -y install tar wget grep coreutils

build:extension:
  stage: build
  script:
    - *install_tools
    - version=$(grep '"version"' package.json | cut -d'"' -f4)
    - npm install
    - npm install --unsafe-perm -g js-yaml vsce
    - js-yaml syntaxes/opsi-script.tmLanguage.yaml > syntaxes/opsi-script.tmLanguage.json
    - vsce package
    - wget "$OPSIDEVTOOLS_URL_LINUX_X64" -O opsi-dev-tools.tar.gz
    - tar -xvf opsi-dev-tools.tar.gz
    - '[ "${CI_COMMIT_TAG}" = "" ] && ./opsi-dev-tool -l info --uib-binaryindex-url=http://binaryindex.uib.gmbh --binary-push opsi-script-${version}.vsix vscode-extension-opsi-script all all "${version}" "${CI_JOB_ID}"'
    - '[ "${CI_COMMIT_TAG}" = "" ] || ./opsi-dev-tool -l info --uib-binaryindex-url=http://binaryindex.uib.gmbh --binary-push opsi-script-${version}.vsix vscode-extension-opsi-script all all "${version}"'
  artifacts:
    name: 'vscode-extension-opsi-script'
    paths:
      - '*.vsix'
    expire_in: 2 days


publish:extension:
  stage: publish
  when: manual
  script:
    - *install_tools
    - npm install
    - npm install --unsafe-perm -g js-yaml vsce
    - vsce publish -p ${MS_MARKETPLACE_PUBLISH_TOKEN}
